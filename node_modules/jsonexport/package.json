{
  "name": "jsonexport",
  "version": "1.0.6",
  "description": "Makes easy to convert JSON to CSV",
  "main": "./lib",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Cnova/jsonexport.git"
  },
  "keywords": [
    "export",
    "json",
    "to",
    "2",
    "csv",
    "converter",
    "output",
    "array",
    "object"
  ],
  "author": {
    "name": "KauÃª Gimenes"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/Cnova/jsonexport/issues"
  },
  "homepage": "https://github.com/Cnova/jsonexport",
  "dependencies": {
    "underscore": "^1.8.3"
  },
  "readme": "# jsonexport\nThis module makes easy to convert JSON to CSV and its very customizable.\n\nChangelog\n----------------------\nv1.0.6 - Create new lines in the CSV file to handle JSON objects with arrays<br>\n\n# Usage\n\nInstallation command is `npm install jsonexport`.\n\n```javascript\nvar jsonexport = require('jsonexport');\n\njsonexport({lang: 'Node.js',module: 'jsonexport'}, {rowDelimiter: '|'}, function(err, csv){\n    if(err) return console.log(err);\n    console.log(csv);\n});\n```\n\n## JSON Array Example\n\n### Simple Array\n\n#### Code\n\n```javascript\nvar jsonexport = require('jsonexport');\n\nvar contacts = [{\n    name: 'Bob',\n    lastname: 'Smith'\n},{\n    name: 'James',\n    lastname: 'David'\n},{\n    name: 'Robert',\n    lastname: 'Miller'\n},{\n    name: 'David',\n    lastname: 'Martin'\n}];\n\njsonexport(contacts,function(err, csv){\n    if(err) return console.log(err);\n    console.log(csv);\n});\n```\n\n#### Result\n\n```\nname;lastname\nBob;Smith\nJames;David\nRobert;Miller\nDavid;Martin\n```\n\n### Complex Array\n\n#### Code\n\n```javascript\nvar jsonexport = require('jsonexport');\n\nvar contacts = [{\n   name: 'Bob',\n   lastname: 'Smith',\n   family: {\n       name: 'Peter',\n       type: 'Father'\n   }\n},{\n   name: 'James',\n   lastname: 'David',\n   family:{\n       name: 'Julie',\n       type: 'Mother'\n   }\n},{\n   name: 'Robert',\n   lastname: 'Miller',\n   family: null,\n   location: [1231,3214,4214]\n},{\n   name: 'David',\n   lastname: 'Martin',\n   nickname: 'dmartin'\n}];\n\njsonexport(contacts,function(err, csv){\n    if(err) return console.log(err);\n    console.log(csv);\n});\n```\n\n#### Result\n\n```\nlastname;name;family.type;family.name;nickname;location\nSmith;Bob;Father;Peter;;\nDavid;James;Mother;Julie;;\nMiller;Robert;;;;1231,3214,4214\nMartin;David;;;dmartin;\n```\n\n## JSON Object Example\n\n### Simple Object\n\n#### Code\n\n```javascript\nvar jsonexport = require('jsonexport');\n\nvar stats = {\n    cars: 12,\n    roads: 5,\n    traffic: 'slow'\n};\n\njsonexport(stats,function(err, csv){\n    if(err) return console.log(err);\n    console.log(csv);\n});\n```\n\n#### Result\n\n```\ncars;12\nroads;5\ntraffic;slow\n```\n\n### Complex Object\n\n#### Code\n\n```javascript\nvar jsonexport = require('jsonexport');\n\nvar stats = {\n    cars: 12,\n    roads: 5,\n    traffic: 'slow',\n    speed: {\n        max: 123,\n        avg: 20,\n        min: 5\n    },\n    size: [10,20]\n};\n\njsonexport(stats,function(err, csv){\n    if(err) return console.log(err);\n    console.log(csv);\n});\n```\n\n#### Result\n\n```\ncars;12\nroads;5\ntraffic;slow\nspeed.max;123\nspeed.avg;20\nspeed.min;5\nsize;10,20\n```\n\n## Customization\n\nIn order to get the most of out of this module, you can customize many parameters and functions.\n\n####Options\n\n- `headerPathString` - `String` Used to create the propriety path, defaults to `.` example `contact: {name: 'example}` = `contact.name`\n- `rowDelimiter` - `String` Change the file row delimiter, defaults to `,`.\n- `endOfLine` - `String` Replace the OS default EOL.\n- `mainPathItem` - `String` Every header will have the `mainPathItem` as the base.\n- `arrayPathString` - `String` This is used to output primitive arrays in a single column, defaults to `;`\n- `booleanTrueString` - `String` Will be used instead of `true`.\n- `booleanFalseString` - `String` Will be used instead of `false`.\n- `includeHeaders` - `Boolean` Set this option to false to hide the CSV headers.\n- `orderHeaders` - `Boolean` By default the most used columns are shown first.\n- `undefinedString` - `String` If you want to display a custom value for undefined strings, use this option. Defaults to ` `.\n- `verticalOutput` - `Boolean` Set this option to false to create a horizontal output for JSON Objects, headers in the first row, values in the second.\n- `handleString` - `Function` Use this to customize all `Strings` in the CSV file.\n- `handleNumber` - `Function` Use this to customize all `Numbers` in the CSV file.\n- `handleBoolean` - `Function` Use this to customize all `Booleans` in the CSV file.\n- `handleDate` - `Function` Use this to customize all `Dates` in the CSV file.\n- `handleArray` - `Function` Use this to customize all `Arrays` in the CSV file.\n- `handleObject` - `Function` Use this to customize all `Objects` in the CSV file.\n\n### Handle Customization\n\nLets say you want to prepend a text to every string in your CSV file, how to do it?\n\n```javascript\nvar jsonexport = require('jsonexport');\n\nvar options = {\n    handleString: function(string, name){\n        return 'Hey - ' + string;\n    }\n};\n\njsonexport({lang: 'Node.js',module: 'jsonexport'}, options, function(err, csv){\n    if(err) return console.log(err);\n    console.log(csv);\n});\n```\n\nThe output would be:\n\n```\nlang;Hey - Node.js\nmodule;Hey - jsonexport\n```\n",
  "readmeFilename": "README.md",
  "_id": "jsonexport@1.0.6",
  "_shasum": "2c2687557edde33b194a07a7bca6953c9f642022",
  "_from": "jsonexport@^1.0.6",
  "_resolved": "https://registry.npmjs.org/jsonexport/-/jsonexport-1.0.6.tgz"
}
